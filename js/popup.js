(()=>{"use strict";const e={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let t;const s=new Uint8Array(16);function n(){if(!t&&(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!t))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(s)}const r=[];for(let e=0;e<256;++e)r.push((e+256).toString(16).slice(1));const a=function(t,s,a){if(e.randomUUID&&!s&&!t)return e.randomUUID();const c=(t=t||{}).random||(t.rng||n)();if(c[6]=15&c[6]|64,c[8]=63&c[8]|128,s){a=a||0;for(let e=0;e<16;++e)s[a+e]=c[e];return s}return function(e,t=0){return(r[e[t+0]]+r[e[t+1]]+r[e[t+2]]+r[e[t+3]]+"-"+r[e[t+4]]+r[e[t+5]]+"-"+r[e[t+6]]+r[e[t+7]]+"-"+r[e[t+8]]+r[e[t+9]]+"-"+r[e[t+10]]+r[e[t+11]]+r[e[t+12]]+r[e[t+13]]+r[e[t+14]]+r[e[t+15]]).toLowerCase()}(c)};(()=>{const e=()=>{chrome.declarativeNetRequest.setExtensionActionOptions({displayActionCountAsBadgeText:!0})},t=()=>{chrome.declarativeNetRequest.setExtensionActionOptions({displayActionCountAsBadgeText:!1})},s=async e=>(await chrome.storage.sync.get(e))[e],n=()=>{chrome.declarativeNetRequest.getEnabledRulesets((e=>{chrome.declarativeNetRequest.updateEnabledRulesets({disableRulesetIds:e})}))},r=()=>{chrome.declarativeNetRequest.getDynamicRules((e=>{const t=e.map((e=>e.id));chrome.declarativeNetRequest.updateDynamicRules({removeRuleIds:t})}))},c=async()=>{let e=await s("defaultRuleIds");chrome.declarativeNetRequest.updateEnabledRulesets({enableRulesetIds:e})},o=async(e,t,s)=>{"global"!==t?((e=[])=>{0!==e.length&&chrome.declarativeNetRequest.getDynamicRules((t=>{const s=t.map((e=>e.id));chrome.declarativeNetRequest.updateDynamicRules({removeRuleIds:s,addRules:e})}))})(await d(e)):chrome.tabs.sendMessage(s,{message:"start",link:e})},d=async e=>{try{if(!e)return;const t=await fetch(e,{method:"GET",credentials:"include",headers:{"Content-Type":"application/json"}});return await t.json()}catch(e){return}},l=()=>{chrome.runtime.lastError};chrome.runtime.onMessage.addListener((function(s,a,o){const{message:d,tabId:i}=s;o("received on bg"),"get_blocked_count"===d?chrome.declarativeNetRequest.getMatchedRules({tabId:i},(function(e){let t=e.rulesMatchedInfo.length;chrome.runtime.sendMessage({message:"set_blocked_count",count:t},(function(e){l()}))})):"disable_ruleset"===d?(t(),n(),r()):"enable_ruleset"===d&&(e(),c())})),chrome.tabs.onUpdated.addListener((async(e,t,n)=>{const{status:r}=t,{url:a,id:c}=n;if("complete"===r){let t={url:a,userId:await s("userId")};const n=await(async(e,t)=>await(async(e,t={})=>{try{const s=await fetch(e,{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});return await s.json()}catch(e){}})("https://smartadblocker.com/extension/rules/api",t))(0,t);if(!n)return;for(const t in n)("id"===t||"genericId"===t)&&n[t]&&n[t].length>0?chrome.tabs.sendMessage(e,{message:"remove-id-div",idList:n[t],hostname:n.hostname},(function(e){l()})):("class"===t||"genericClass"===t)&&n[t]&&n[t].length>0?chrome.tabs.sendMessage(e,{message:"remove-class-div",classList:n[t]},(function(e){l()})):"innerText"===t&&n[t]&&n[t].length>0?chrome.tabs.sendMessage(e,{message:"remove-innerText-div",innerText:n[t]},(function(e){l()})):"rules"===t?n.updateRules&&o(n[t],n.rule_scope,e):"cc"===t&&n[t]&&chrome.storage.sync.get(["ctCode","cArr"],(e=>{let s=e.ctCode||"",r=e.cArr||[];n[t]==s&&r.length==n.acc.length||chrome.storage.sync.set({cArr:[...n.acc],ctCode:n[t]})}))}})),chrome.declarativeNetRequest.getEnabledRulesets((function(e){chrome.storage.sync.get(["ctCode","cArr"],(t=>{let s=t.ctCode||"",n=t.cArr||[];if(s&&n.indexOf(s)>0){s="rls_"+s.toLowerCase();let t=["generic_rules","g_rules","rls_main","y_rules","feedback_rules",`${s}`],n=e.filter((e=>!t.includes(e)));chrome.declarativeNetRequest.updateEnabledRulesets({disableRulesetIds:n,enableRulesetIds:t})}else{let t=["generic_rules","g_rules","rls_main","y_rules","feedback_rules"],s=e.filter((e=>!t.includes(e)));chrome.declarativeNetRequest.updateEnabledRulesets({disableRulesetIds:s,enableRulesetIds:t})}}))})),chrome.runtime.onInstalled.addListener((async function(e){"install"==e.reason?(chrome.storage.sync.set({userId:a(),switchOn:!0}),chrome.declarativeNetRequest.getEnabledRulesets((e=>{chrome.storage.sync.set({defaultRuleIds:e})}))):"update"==e.reason&&chrome.storage.sync.get("userId",(e=>{e.userId||chrome.storage.sync.set({userId:a(),switchOn:!0})}))})),chrome.storage.sync.get(null,(s=>{let a;a=void 0===s.switchOn||s.switchOn,a?(e(),c()):(t(),n(),r())}))})()})();
